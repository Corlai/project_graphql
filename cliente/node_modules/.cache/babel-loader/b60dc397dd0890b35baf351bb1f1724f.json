{"ast":null,"code":"var _jsxFileName = \"/Users/jesuscordova/Desktop/curso-Graphql-Udemy/graphql-servidor/cliente/src/components/Clientes.js\";\n//Para el from\nimport React, { Fragment } from 'react'; //Para la query\n\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom'; //importa la consulta de clientes\n\nimport { CLIENTES_QUERY } from '../queries'; //vamos a hacer un listado de los contactos que tenemos en base de datos\n//usaremos react-apollo con sus querys y mutations\n\nvar Contactos = function Contactos() {\n  return (// pollInterval define cada cuanto se va a refrescar en milisegundos\n    React.createElement(Query, {\n      query: CLIENTES_QUERY,\n      pollInterval: 1000,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, function (_ref) {\n      var loading = _ref.loading,\n          error = _ref.error,\n          data = _ref.data,\n          startPolling = _ref.startPolling,\n          stopPolling = _ref.stopPolling;\n      if (loading) return 'Cargando...'; // Usamos un template string porque queremos usar una variable\n\n      if (error) return \"Error: \".concat(error.message);\n      console.log(data.getClientes); //una query tiene que devolver algo\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \" Listado de Clientes \"), React.createElement(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, data.getClientes.map(function (item) {\n        return React.createElement(\"li\", {\n          key: item.id,\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row justify-content-between align-items-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-md-8 d-fex justify-content-between align-items-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, item.nombre, \" \", item.apellido, \" - \", item.empresa), React.createElement(\"div\", {\n          className: \"col-md-4 d-flex justify-content-end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/cliente/editar/\".concat(item.id),\n          className: \"btn btn-success d-block d-md-inline-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"Editar Cliente\"))));\n      })));\n    })\n  );\n};\n\nexport default Contactos;","map":{"version":3,"sources":["/Users/jesuscordova/Desktop/curso-Graphql-Udemy/graphql-servidor/cliente/src/components/Clientes.js"],"names":["React","Fragment","Query","Link","CLIENTES_QUERY","Contactos","loading","error","data","startPolling","stopPolling","message","console","log","getClientes","map","item","id","nombre","apellido","empresa"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;AACA,SAASC,cAAT,QAA+B,YAA/B,C,CAEA;AACA;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SACjB;AACA,wBAAC,KAAD;AAAO,MAAA,KAAK,EAAED,cAAd;AAA8B,MAAA,YAAY,EAAE,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,gBAAyD;AAAA,UAAtDE,OAAsD,QAAtDA,OAAsD;AAAA,UAA7CC,KAA6C,QAA7CA,KAA6C;AAAA,UAAtCC,IAAsC,QAAtCA,IAAsC;AAAA,UAAhCC,YAAgC,QAAhCA,YAAgC;AAAA,UAAlBC,WAAkB,QAAlBA,WAAkB;AACzD,UAAIJ,OAAJ,EAAa,OAAO,aAAP,CAD4C,CAEzD;;AACA,UAAIC,KAAJ,EAAW,wBAAiBA,KAAK,CAACI,OAAvB;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACM,WAAjB,EAJyD,CAKzD;;AACA,aACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADD,EAEC;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEEN,IAAI,CAACM,WAAL,CAAiBC,GAAjB,CAAqB,UAACC,IAAD;AAAA,eACrB;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAkB,UAAA,SAAS,EAAC,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAK,UAAA,SAAS,EAAC,gDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAK,UAAA,SAAS,EAAC,2DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACED,IAAI,CAACE,MADP,OACgBF,IAAI,CAACG,QADrB,SACkCH,IAAI,CAACI,OADvC,CADD,EAIC;AAAK,UAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEC,oBAAC,IAAD;AACC,UAAA,EAAE,4BAAqBJ,IAAI,CAACC,EAA1B,CADH;AAEC,UAAA,SAAS,EAAC,2CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFD,CAJD,CADD,CADqB;AAAA,OAArB,CAFF,CAFD,CADD;AA0BA,KAlCF;AAFiB;AAAA,CAAlB;;AAwCA,eAAeZ,SAAf","sourcesContent":["//Para el from\nimport React, { Fragment } from 'react';\n//Para la query\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\n\n//importa la consulta de clientes\nimport { CLIENTES_QUERY } from '../queries';\n\n//vamos a hacer un listado de los contactos que tenemos en base de datos\n//usaremos react-apollo con sus querys y mutations\nconst Contactos = () => (\n\t// pollInterval define cada cuanto se va a refrescar en milisegundos\n\t<Query query={CLIENTES_QUERY} pollInterval={1000}>\n\t\t{/* (se pueden pasar mas) loading mensaje mientras carga el c칩digo, error es el mensaje en caso de error y data ser치n los datos */}\n\t\t{({ loading, error, data, startPolling, stopPolling }) => {\n\t\t\tif (loading) return 'Cargando...';\n\t\t\t// Usamos un template string porque queremos usar una variable\n\t\t\tif (error) return `Error: ${error.message}`;\n\t\t\tconsole.log(data.getClientes);\n\t\t\t//una query tiene que devolver algo\n\t\t\treturn (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<h2 className=\"text-center\"> Listado de Clientes </h2>\n\t\t\t\t\t<ul className=\"list-group\">\n\t\t\t\t\t\t{/* indicamos que es un c칩digo de react con las llaves*/}\n\t\t\t\t\t\t{data.getClientes.map((item) => (\n\t\t\t\t\t\t\t<li key={item.id} className=\"list-group-item\">\n\t\t\t\t\t\t\t\t<div className=\"row justify-content-between align-items-center\">\n\t\t\t\t\t\t\t\t\t<div className=\"col-md-8 d-fex justify-content-between align-items-center\">\n\t\t\t\t\t\t\t\t\t\t{item.nombre} {item.apellido} - {item.empresa}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"col-md-4 d-flex justify-content-end\">\n\t\t\t\t\t\t\t\t\t\t{/* con el signo dolar estamos refiriendonos al id del elemento item que est치 en el dom */}\n\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\tto={`/cliente/editar/${item.id}`}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-success d-block d-md-inline-block\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tEditar Cliente\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</Fragment>\n\t\t\t);\n\t\t}}\n\t</Query>\n);\n\nexport default Contactos;\n"]},"metadata":{},"sourceType":"module"}